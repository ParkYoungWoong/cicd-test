name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  # 단위 테스트
  unit-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: pnpm 설치
        run: npm install -g pnpm
      - name: 의존성 설치
        run: pnpm install --frozen-lockfile
      - name: 단위 테스트 실행
        run: pnpm run test:unit:coverage

  # E2E 테스트
  e2e-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: pnpm 설치
        run: npm install -g pnpm

      # pnpm 캐시
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Playwright 캐시
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: 의존성 설치
        run: pnpm install --frozen-lockfile

      # 브라우저가 캐시되어 있지 않은 경우에만 설치
      - name: Playwright 브라우저 설치
        run: npx playwright install --with-deps

      # Chromium만 사용하도록 설정
      - name: Playwright 테스트 실행
        run: npx playwright test --project=chromium --reporter=list

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # 실패 알림
  notify-slack-failure:
    needs: [unit-test, e2e-test]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: 슬랙 알림 (테스트 실패)
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          fields: repo,commit,author,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # 성공 알림
  notify-slack-success:
    needs: [unit-test, e2e-test]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: 슬랙 알림 (테스트 성공)
        uses: 8398a7/action-slack@v3
        with:
          status: success
          fields: repo,commit,author,ref,workflow,job,took
          text: |
            성공했지롱~~~😘
            메롱이지롱~~~😘
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
